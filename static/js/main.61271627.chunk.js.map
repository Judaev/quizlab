{"version":3,"sources":["components/ProfilePage/ProfilePage.module.css","components/AuthPage/validators.js","components/AuthPage/FormsControls.js","redux/authReducer.ts","components/AuthPage/AuthPage.tsx","images/like.svg","images/liked.svg","components/ProfilePage/ProfilePosts.tsx","images/add.svg","components/ProfilePage/AddPost/Textarea.js","redux/feedReducer.ts","redux/profileReducer.ts","components/ProfilePage/AddPost/AddPost.tsx","components/ProfilePage/ProfilePage.tsx","components/FeedPage/FeedPage.tsx","components/SubPage/SubPage.tsx","App.tsx","redux/store.ts","serviceWorker.ts","index.tsx","components/ProfilePage/AddPost/AddPost.module.css","components/ProfilePage/ProfilePosts.module.css","components/SubPage/SubPage.module.css","components/AuthPage/AuthPage.module.css","components/FeedPage/FeedPage.module.css"],"names":["module","exports","maxLength","requiredField","value","LoginInput","input","meta","props","showError","error","touched","SET_USER_DATA","initialState","userId","userName","subscriptions","subscribers","isAuth","authReducer","state","action","type","maxLength12","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","className","style","name","component","button","connect","authPage","login","dispatch","setAuthUserData","to","main","title","FormData","useState","likePost","setLikePost","header","like","onClick","src","liked","content","post","likeCount","Textarea","cols","rows","autoFocus","textarea","SET_NEWS","setNewsFeed","news","setNewsAC","ADD_POST","SET_USER_PROFILE","posts","id","text","userNameLiked","profileReducer","newPost","profile","AddPostFormRedux","createPost","placeholder","addPostButton","addPost","addPostActionCreater","values","closeButton","setOpen","profilePage","open","postElement","map","headerProfile","subButton","footer","backButton","add","myPost","setMyPost","postFilter","SubPage","subItem","compose","exact","path","render","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.61271627.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfilePage_main__1Mt7q\",\"headerProfile\":\"ProfilePage_headerProfile__2LpRo\",\"userName\":\"ProfilePage_userName__3Vtxu\",\"subscriptions\":\"ProfilePage_subscriptions__1Lblo\",\"subButton\":\"ProfilePage_subButton__d3l83\",\"footer\":\"ProfilePage_footer__npiVf\",\"backButton\":\"ProfilePage_backButton__1GIbj\",\"addPost\":\"ProfilePage_addPost__1hyBj\"};","export const requiredField = (value) => {\r\n  if (value) {\r\n    return undefined\r\n  } else {\r\n    return 'Error message'\r\n  }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Максимальная длина ${maxLength} символов`\r\n  } else {\r\n    return undefined\r\n  }\r\n}","export const LoginInput = ({input, meta, ...props}) => {\r\n  const showError = meta.error && meta.touched \r\n\r\n  return(\r\n    <div>\r\n      { showError && <span>{meta.error}</span>}\r\n      <div>\r\n        <input {...input} {...props} />  \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  userName: null,\r\n  subscriptions: 0,\r\n  subscribers: 0,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n        isAuth: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userName: any) => ({\r\n  type: SET_USER_DATA,\r\n  userName\r\n})\r\n\r\nexport const login = (userName: any) => {\r\n  return (dispatch: any) => {\r\n    dispatch(setAuthUserData(userName))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport style from './AuthPage.module.css'\r\nimport { maxLengthCreator, requiredField } from './validators'\r\nimport { LoginInput } from './FormsControls'\r\nimport { login } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst AuthPage: React.FC = (props: any) => {\r\n  const onSubmit = (FormData: any) => {\r\n    props.login(FormData.userName)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.title}>Введите имя</div>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength12 = maxLengthCreator(12)\r\n\r\nconst LoginForm = (props: any) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[requiredField, maxLength12]}\r\n          className={style.input}\r\n          name=\"userName\"\r\n          component={LoginInput}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={style.button}>Продолжить</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToPtops = (state: any) => ({\r\n  isAuth: state.authPage.isAuth,\r\n})\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm)\r\n\r\nexport default connect(mapStateToPtops, { login })(AuthPage)\r\n","export default __webpack_public_path__ + \"static/media/like.665ede1a.svg\";","export default __webpack_public_path__ + \"static/media/liked.b16558c9.svg\";","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport style from './ProfilePosts.module.css'\r\nimport like from '../../images/like.svg'\r\nimport liked from '../../images/liked.svg'\r\n\r\ninterface IMyProps {\r\n  userName: string\r\n  key: number\r\n  post: string\r\n  like?: any\r\n}\r\n\r\nconst ProfilePosts: React.FC<IMyProps> = (props: any) => {\r\n  const [likePost, setLikePost] = useState<boolean>(false)\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.header}>\r\n        <div className={style.userName}>{props.userName}</div>\r\n        <img\r\n          className={style.like}\r\n          onClick={() => setLikePost(!likePost)}\r\n          src={!likePost ? like : liked}\r\n        />\r\n      </div>\r\n      <div className={style.content}>{props.post}</div>\r\n      <div className={style.likeCount}>\r\n        Понравилось: \r\n        {/* {props.like.userNameLiked.map((l: any) => l + ', ')} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet mapStateToPtops = (state: any) => ({\r\n  userName: state.authPage.userName,\r\n  subscriptions: state.authPage.subscriptions,\r\n  subscribers: state.authPage.subscribers,\r\n})\r\n\r\nexport default connect(mapStateToPtops, {})(ProfilePosts)\r\n","export default __webpack_public_path__ + \"static/media/add.1b5b6dde.svg\";","import style from './AddPost.module.css'\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n  const showError = meta.error && meta.touched \r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <textarea cols='30' rows='5' autoFocus className={style.textarea} {...input} {...props} />  \r\n      </div>\r\n      { showError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\n// className={style.form__control + ' ' + (showError ? style.error : '') }","const SET_NEWS = 'SET_NEWS'\r\n\r\nlet initialState = {\r\n  news: [],\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_NEWS:\r\n      return {\r\n        ...state,\r\n        news: [...state.news, ...action.news],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setNewsAC = (news: any) => ({\r\n  type: SET_NEWS,\r\n  news,\r\n})\r\n\r\nexport const setNewsFeed = (news: any) => {\r\n  return (dispatch: any) => {\r\n    dispatch(setNewsAC(news))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import { setNewsFeed } from './feedReducer'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      text: 'Я теперь являюсь разработчиком в Quiz Lab!!!',\r\n      like: {\r\n        userNameLiked: ['Андрей', 'Миша', 'Виктор'],\r\n        liked: false,\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Я работаю в самой лучшей компании на свете!',\r\n      like: {\r\n        userNameLiked: ['Андрей', 'Миша', 'Виктор'],\r\n        liked: false,\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'У меня самая мощная команда! Вместе мы добъемся всего!',\r\n      like: {\r\n        userNameLiked: ['Андрей', 'Миша', 'Виктор'],\r\n        liked: false,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 5, text: action.newPost }],\r\n        like: {\r\n          userNameLiked: ['dsf'],\r\n          liked: false,\r\n        },\r\n      }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setUserProfile = (profile: any) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n})\r\n\r\nexport const setLike = (like: boolean) => ({ type: SET_USER_PROFILE, like })\r\n\r\nexport const addPostActionCreater = (newPost: any) => ({\r\n  type: ADD_POST,\r\n  newPost,\r\n})\r\n\r\nexport const addPost = (newPost: any) => {\r\n  return (dispatch: any) => {\r\n    dispatch(addPostActionCreater(newPost))\r\n    dispatch(setNewsFeed(newPost))\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport style from './AddPost.module.css'\r\nimport { Textarea } from './Textarea'\r\nimport { addPost } from '../../../redux/profileReducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddPost: React.FC<{setOpen(value: boolean): void}> = (props: any) => {\r\n  let addNewPost = (values: any) => {\r\n    props.addPost(values.newPost)\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.title}>Новый пост</div>\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n      <button className={style.closeButton} onClick={() => props.setOpen(false)}>Закрыть</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddPostForm = (props: any) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit} className={style.createPost}>\r\n      <Field placeholder='Чем хотите поделиться?' name='newPost' component={Textarea} />\r\n      <button className={style.addPostButton}>Опубликовать</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addText'\r\n}) (AddPostForm)\r\n\r\nexport default connect(null, {addPost}) (AddPost)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './ProfilePage.module.css'\r\nimport ProfilePosts from './ProfilePosts'\r\nimport add from '../../images/add.svg'\r\nimport AddPost from './AddPost/AddPost'\r\n\r\n\r\n\r\nconst ProfilePage: React.FC = (props: any) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  let postElement = props.posts\r\n  .map( (post: any) => <ProfilePosts key={post.id}  post={post.text} like={post.like} />)\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.headerProfile}>\r\n        <div className={style.userName}>{props.userName},</div>\r\n        <NavLink to='/subscriptions' className={style.subscriptions}>{props.subscriptions} подписки,</NavLink>\r\n        <div className={style.subscribers}>{props.subscribers} подписчиков</div>\r\n      </div>\r\n      <button className={style.subButton}>Подписаться</button>\r\n      {postElement}\r\n      <div className={style.footer}>\r\n        <NavLink to='/feed'className={style.backButton} >В ленту</NavLink>\r\n        <img className={style.addPost} src={add} onClick={() => setOpen(!open)} />\r\n      </div>\r\n      {open && <AddPost setOpen={setOpen} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nlet mapStateToPtops = (state: any) => ({\r\n  userName: state.authPage.userName,\r\n  subscriptions: state.authPage.subscriptions,\r\n  subscribers: state.authPage.subscribers,\r\n  posts: state.profilePage.posts\r\n})\r\n\r\n\r\nexport default connect(mapStateToPtops, {}) (ProfilePage)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport ProfilePosts from '../ProfilePage/ProfilePosts'\r\nimport style from './FeedPage.module.css'\r\n\r\nconst FeedPage: React.FC = (props: any) => {\r\n  const [myPost, setMyPost] = useState<boolean>(false)\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.postFilter}>\r\n        <button onClick={() => setMyPost(false)}>Все посты</button>\r\n        <button onClick={() => setMyPost(true)}>Подписки</button>\r\n      </div>\r\n      <div>\r\n        { !myPost ? props.posts.map( (post: any) => <ProfilePosts key={post.id}  post={post.text} like={post.like} /> )  : \"my\" }  \r\n      </div>\r\n      \r\n      <NavLink to='/profile' className={style.backButton}>В профиль</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet mapStateToPtops = (state: any) => ({\r\n  posts: state.profilePage.posts\r\n})\r\n\r\nexport default connect(mapStateToPtops, {}) (FeedPage)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './SubPage.module.css'\r\n\r\nconst SubPage = () => {\r\n  return (\r\n    <div className={style.main}>\r\n      <NavLink to='/profile' className={style.title}>Назад</NavLink>\r\n      <div className={style.subItem}>\r\n        <NavLink to='/'>Александр</NavLink>\r\n      </div>\r\n      <div className={style.subItem}>\r\n        <NavLink to='/'>Андрей</NavLink>\r\n      </div>\r\n      <div className={style.subItem}>\r\n        <NavLink to='/'>Артур</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubPage","// import { compose } from '@reduxjs/toolkit'\r\nimport { compose } from 'redux'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route } from 'react-router-dom'\r\nimport './App.css'\r\nimport AuthPage from './components/AuthPage/AuthPage'\r\nimport ProfilePage from './components/ProfilePage/ProfilePage'\r\nimport FeedPage from './components/FeedPage/FeedPage'\r\nimport SubPage from './components/SubPage/SubPage'\r\n\r\ninterface IMyProps {\r\n  isAuth: any\r\n}\r\n\r\ninterface IMyState {}\r\n\r\nconst App: React.FC<IMyProps> = (props: any) => {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Route exact path=\"/quizlab\"  render={() => <AuthPage />} />\r\n      <Route path=\"/profile\"        render={() => <ProfilePage />} />\r\n      <Route path=\"/feed\"           render={() => <FeedPage />} />\r\n      <Route path=\"/subscriptions\"  render={() => <SubPage />} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToPtops = (state: any) => ({\r\n  isAuth: state.authPage.isAuth,\r\n})\r\n\r\nexport default compose(connect(mapStateToPtops, {}))(App)\r\n","import {\r\n  ThunkAction,\r\n  Action,\r\n  combineReducers,\r\n  createStore,\r\n  applyMiddleware,\r\n} from '@reduxjs/toolkit'\r\nimport authReducer from './authReducer'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport profileReducer from './profileReducer'\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     authPage: authReducer\r\n//   },\r\n// });\r\n\r\nlet reducers = combineReducers({\r\n  authPage: authReducer,\r\n  profilePage: profileReducer,\r\n  form: formReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store  from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AddPost_main__xqBjy\",\"title\":\"AddPost_title__2A6tx\",\"textarea\":\"AddPost_textarea__GMIZV\",\"addPostButton\":\"AddPost_addPostButton__3cWzg\",\"closeButton\":\"AddPost_closeButton__3Ngug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfilePosts_main__15kvM\",\"header\":\"ProfilePosts_header__345lj\",\"userName\":\"ProfilePosts_userName__Mu1ZZ\",\"like\":\"ProfilePosts_like__2IVrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SubPage_main__26ytS\",\"title\":\"SubPage_title__2Sgvz\",\"subItem\":\"SubPage_subItem__27c5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AuthPage_main__3ETh2\",\"title\":\"AuthPage_title__NkoQL\",\"input\":\"AuthPage_input__1Mpy9\",\"button\":\"AuthPage_button__INt1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"FeedPage_main__2NIH4\",\"postFilter\":\"FeedPage_postFilter__1nv1O\",\"footer\":\"FeedPage_footer__2a4Qk\",\"backButton\":\"FeedPage_backButton__3MCc3\"};"],"sourceRoot":""}